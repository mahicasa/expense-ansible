
#Head "Install Nginx"
#dnf install nginx -y &>>$log_file
#Stat $?
#
#Head "Copy Expense Config File"
#cp expense.conf /etc/nginx/default.d/expense.conf &>>$log_file
#Stat $?
#
#App_Prereq "/usr/share/nginx/html"
#
#Head "Start Nginx Service"
#systemctl enable nginx &>>$log_file
#systemctl restart nginx &>>$log_file
#Stat $?

#  DIR=$1
#
#  Head "Remove existing App content"
#  rm -rf $1 &>>$log_file
#  Stat $?
#
#  Head "Create Application Directory"
#  mkdir $1 &>>$log_file
#  Stat $?
#
#  Head "Download Application Content"
#  curl -o /tmp/${component}.zip https://expense-artifacts.s3.amazonaws.com/${component}.zip &>>$log_file
#  Stat $?
#
#  cd $1
#
#  Head "Extracting Application Content"
#  unzip /tmp/${component}.zip &>>$log_file
#  Stat $?

- name: Setup Frontend
  hosts: all
  become: true
  tasks:
    - name: Install Nginx
      ansible.builtin.dnf:
        name: nginx
        state: installed
    - name: Copy Expense Config File
      ansible.builtin.copy:
        src: expense.conf
        dest: /etc/nginx/default.d/expense.conf

    - name: Remove existing App content
      ansible.builtin.file:
        path: /usr/share/nginx/html
        state: absent
    - name: Create Application Directory
      ansible.builtin.file:
        path: /usr/share/nginx/html
        state: directory

    - name: Download & Extract the Application Content
      ansible.builtin.unarchive:
        src: https://expense-artifacts.s3.amazonaws.com
        dest: /usr/share/nginx/html
        remote_src: yes
    - name: Start Nginx service
      ansible.builtin.systemd_service:
        enabled: true
        state: restarted